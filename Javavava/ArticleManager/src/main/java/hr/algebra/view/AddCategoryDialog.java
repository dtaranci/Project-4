/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package hr.algebra.view;

import hr.algebra.model.Author;
import hr.algebra.model.AuthorAddable;
import hr.algebra.model.AuthorTransferable;
import hr.algebra.model.Category;
import hr.algebra.model.CategoryAddable;
import hr.algebra.model.CategoryTransferable;
import hr.algebra.utilities.MessageUtils;
import java.awt.datatransfer.Transferable;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.io.IOException;
import java.util.HashSet;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.DropMode;
import javax.swing.JComponent;
import javax.swing.ListSelectionModel;
import javax.swing.TransferHandler;

/**
 *
 * @author Derin
 */
public class AddCategoryDialog extends javax.swing.JDialog {

    /**
     * Creates new form AddAuthorDialog
     */
    private final CategoryAddable categoryAddable;
    
    private final DefaultListModel<Category> allCategoriesModel = new DefaultListModel<>();
    private final DefaultListModel<Category> articleCategoriesModel = new DefaultListModel<>();
    
    private Set<Category> allCategories;
    private Set<Category> articleCategories;
    private Set<Category> articleCategoriesDefault;
    
    
    //because of the usage of JFrame and JPanel, the dialog requires the passage of JFrame to function,
    //however that also means that the parent variable is the JFrame and not the JPanel that implements
    //AuthorAddable. The fix is to additionally pass the AuthorAddable through the constructor
    public AddCategoryDialog(java.awt.Frame parent, boolean modal, CategoryAddable categoryaddable) {
        super(parent, modal);
        this.categoryAddable = categoryaddable;
        
        initComponents();
        
        //center dialog
        setLocationRelativeTo(parent);
        
        clearListModels();
        initFormLists();
        updateFormLists();
        initDragAndDrop();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lsDialogAllCategories = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        lsDialogArticleCategories = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnCancel = new javax.swing.JButton();
        btnOk = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jScrollPane1.setViewportView(lsDialogAllCategories);

        jScrollPane2.setViewportView(lsDialogArticleCategories);

        jLabel1.setText("Article categories");

        jLabel2.setText("All categories");

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnOk.setText("OK");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOk))
                .addGap(19, 19, 19))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnOk))
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        //close dialog
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        if (!articleCategories.equals(articleCategoriesDefault)) {
            Set<Category> temp = new HashSet<>(articleCategories);
            temp.removeAll(articleCategoriesDefault);
            
            if (!temp.isEmpty()) {
                try {
                    categoryAddable.addCategories(temp);
                } catch (Exception e) {
                    MessageUtils.showErrorMessage("Dialog error", e.getMessage().toString());
                }
                this.dispose();
            }
        }
        else {
            this.dispose();
        }
        
    }//GEN-LAST:event_btnOkActionPerformed


    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOk;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<Category> lsDialogAllCategories;
    private javax.swing.JList<Category> lsDialogArticleCategories;
    // End of variables declaration//GEN-END:variables

    private void clearListModels() {
        allCategoriesModel.clear();
        articleCategoriesModel.clear();
    }
    
    private void initFormLists() {

        clearListModels();
        
        allCategories =  categoryAddable.getAllCategories();
        articleCategories = categoryAddable.getArticleCategories();
        
        //to compare later
        articleCategoriesDefault = new HashSet<Category>(articleCategories);
        
        //only show addables
        allCategories.removeAll(articleCategories);

    }
    
    private void updateFormLists() {
        clearListModels();
        allCategoriesModel.addAll(allCategories);
        articleCategoriesModel.addAll(articleCategories);
        lsDialogAllCategories.setModel(allCategoriesModel);
        lsDialogArticleCategories.setModel(articleCategoriesModel);
    }

    private void initDragAndDrop() {
        
        //source for dnd
        lsDialogAllCategories.setDragEnabled(true);
        lsDialogAllCategories.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        lsDialogAllCategories.setTransferHandler(new ExportHandler());
        
        //target for dnd
        lsDialogArticleCategories.setDropMode(DropMode.ON);
        lsDialogArticleCategories.setTransferHandler(new ImportHandler());
    }

    private class ExportHandler extends TransferHandler {

        @Override
        public int getSourceActions(JComponent c) {
            return COPY;
        }

        @Override
        protected Transferable createTransferable(JComponent c) {
            return new CategoryTransferable(lsDialogAllCategories.getSelectedValue());
        }
        
    }
    
    private class ImportHandler extends TransferHandler { 

        @Override
        public boolean canImport(TransferSupport support) {
            return support.isDataFlavorSupported(AuthorTransferable.AUTHOR_FLAVOR);
        }

        @Override
        public boolean importData(TransferSupport support) {
            Transferable transferable = support.getTransferable();
            try {
                Category data = (Category) transferable.getTransferData(CategoryTransferable.CATEGORY_FLAVOR);
                
                //operations
                articleCategories.add(data);
                allCategories.remove(data);
                updateFormLists();
                
            } catch (UnsupportedFlavorException | IOException ex) {
                Logger.getLogger(AddAuthorDialog.class.getName()).log(Level.SEVERE, null, ex);
            }
            return false;
        }
        
        
        
    }
    
}
